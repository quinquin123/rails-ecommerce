---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- bearerAuth: []
paths:
  "/api/v1/login":
    post:
      summary: User login
      tags:
      - Auth
      parameters: []
      responses:
        '200':
          description: Login successfully
          headers:
            Authorization:
              type: string
              description: JWT token returned after successful login
        '401':
          description: Incorrect login information
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
            examples:
              '0':
                summary: User login
                value:
                  user:
                    email: trickingquinquin@gmail.com
                    password: '123456'
        required: true
  "/api/v1/signup":
    post:
      summary: User Register
      tags:
      - Auth
      parameters: []
      responses:
        '201':
          description: Register successfully
        '422':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - name
              - email
              - password
              - password_confirmation
  "/api/v1/logout":
    delete:
      summary: Log out the user
      tags:
      - Auth
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Log out successfully
        '401':
          description: Not authentic
  "/api/v1/orders":
    get:
      summary: List Orders
      tags:
      - Orders
      security:
      - bearerAuth: []
      parameters:
      - name: status
        in: query
        description: Filter by status
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
      - name: per_page
        in: query
        schema:
          type: integer
      responses:
        '200':
          description: Order list returned
    post:
      summary: Create Order from Cart
      tags:
      - Orders
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: Order created successfully
        '422':
          description: Cart is empty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_address:
                  type: string
                payment_method:
                  type: string
              required:
              - shipping_address
              - payment_method
        required: true
  "/api/v1/orders/{id}":
    get:
      summary: View Order Detail
      tags:
      - Orders
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Order found
        '404':
          description: Order not found
    put:
      summary: Update Order Shipping Address
      tags:
      - Orders
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Order updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_address:
                  type: string
  "/api/v1/orders/{id}/retry_payment":
    post:
      summary: Retry Order Payment
      tags:
      - Orders
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Retry initiated
        '422':
          description: Order cannot be retried
  "/api/v1/orders/{id}/refund":
    post:
      summary: Refund Order
      tags:
      - Orders
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Order refunded
        '422':
          description: Refund denied
  "/api/v1/products":
    get:
      summary: List products with pagination
      tags:
      - Products
      parameters:
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
      - name: per_page
        in: query
        description: Products per page
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        price:
                          type: number
                        description:
                          type: string
                        preview_image_url:
                          type: string
                          nullable: true
                        seller_name:
                          type: string
                          nullable: true
                        category:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
  "/api/v1/users":
    get:
      summary: Get list of users
      tags:
      - Users
      parameters:
      - name: page
        in: query
        description: Page
        schema:
          type: integer
      - name: per_page
        in: query
        description: Quantity per page
        schema:
          type: integer
      responses:
        '200':
          description: List of users
    post:
      summary: Create a new user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: Created successfully
        '422':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
                role:
                  type: string
                  enum:
                  - admin
                  - seller
                  - buyer
                status:
                  type: string
                  enum:
                  - active
                  - blocked
                  - pending_approval
                  - inactive
              required:
              - email
              - password
              - role
            examples:
              '0':
                summary: Create a new user
                value:
                  user:
                    name: quin
                    email: trickingquinquin@gmail.com
                    password: '123456'
                    role: buyer
                    status: active
  "/api/v1/users/{id}":
    get:
      summary: View user details
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: User information
    put:
      summary: Update user information
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Updated successfully
        '422':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                      format: email
                    role:
                      type: string
                    status:
                      type: string
              required:
              - user
        required: true
    delete:
      summary: Delete User
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Deleted successfully
servers:
- url: http://localhost:3000
